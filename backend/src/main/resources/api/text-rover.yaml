openapi: 3.0.3
info:
  title: TextRover API
  description: API for analyzing text to count vowels and consonants
  version: 1.0.0
  contact:
    name: TextRover Team
    email: support@textrover.com
servers:
  - url: http://localhost:8080/api
    description: Local development server
paths:
  /analyze:
    post:
      summary: Analyze text for vowels or consonants
      description: Counts occurrences of vowels or consonants in the provided text
      operationId: analyzeText
      tags:
        - Text Analysis
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AnalysisRequest'
            examples:
              vowels_example:
                summary: Analyze vowels
                value:
                  type: "VOWELS"
                  text: "Hello World"
              consonants_example:
                summary: Analyze consonants
                value:
                  type: "CONSONANTS"
                  text: "Hello World"
      responses:
        '200':
          description: Analysis completed successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AnalysisResponse'
              examples:
                vowels_response:
                  summary: Vowels analysis result
                  value:
                    type: "vowels"
                    text: "Hello World"
                    result:
                      e: 1
                      o: 2
                consonants_response:
                  summary: Consonants analysis result
                  value:
                    type: "consonants"
                    text: "Hello World"
                    result:
                      h: 1
                      l: 3
                      w: 1
                      r: 1
                      d: 1
        '400':
          description: Bad request - invalid input
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                validation_error:
                  summary: Validation error
                  value:
                    error: "Validation failed"
                    message: "Text cannot be empty"
                    timestamp: "2025-08-21T21:30:00Z"
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /history:
    get:
      summary: Get paginated analysis history
      description: Retrieves analysis history with pagination support
      operationId: getAnalysisHistory
      tags:
        - Analysis History
      parameters:
        - name: page
          in: query
          description: Page number (0-based)
          required: false
          schema:
            type: integer
            minimum: 0
            default: 0
          example: 0
        - name: size
          in: query
          description: Number of items per page
          required: false
          schema:
            type: integer
            minimum: 1
            maximum: 100
            default: 20
          example: 20
      responses:
        '200':
          description: History retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AnalysisHistoryResponse'
        '400':
          description: Bad request - invalid pagination parameters
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    delete:
      summary: Delete all analysis history
      description: Removes all persisted analysis history from the database
      operationId: deleteAllHistory
      tags:
        - Analysis History
      responses:
        '200':
          description: All history deleted successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "All analysis history deleted successfully"
                  deletedCount:
                    type: integer
                    description: Number of records deleted
                    example: 42
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

components:
  schemas:
    AnalysisRequest:
      type: object
      required:
        - type
        - text
      properties:
        type:
          $ref: '#/components/schemas/AnalysisType'
        text:
          type: string
          description: The text to analyze
          minLength: 1
          maxLength: 10000
          example: "Hello World"
      example:
        type: "VOWELS"
        text: "Hello World"

    AnalysisResponse:
      type: object
      properties:
        type:
          type: string
          description: The type of analysis performed (lowercase)
          enum: [vowels, consonants]
          example: "vowels"
        text:
          type: string
          description: The original text that was analyzed
          example: "Hello World"
        result:
          type: object
          description: Map of characters to their occurrence counts
          additionalProperties:
            type: integer
            minimum: 0
          example:
            e: 1
            o: 2
        statistics:
          $ref: '#/components/schemas/AnalysisStatistics'
      example:
        type: "vowels"
        text: "Hello World"
        result:
          e: 1
          o: 2

    AnalysisType:
      type: string
      enum:
        - VOWELS
        - CONSONANTS
      description: The type of analysis to perform
      example: "VOWELS"

    AnalysisHistoryResponse:
      type: object
      properties:
        content:
          type: array
          items:
            $ref: '#/components/schemas/AnalysisHistoryItem'
          description: List of analysis history items
        totalElements:
          type: integer
          description: Total number of items across all pages
          example: 150
        totalPages:
          type: integer
          description: Total number of pages
          example: 8
        size:
          type: integer
          description: Number of items per page
          example: 20
        number:
          type: integer
          description: Current page number (0-based)
          example: 0
        first:
          type: boolean
          description: Whether this is the first page
          example: true
        last:
          type: boolean
          description: Whether this is the last page
          example: false
        hasNext:
          type: boolean
          description: Whether there are more pages available
          example: true

    AnalysisHistoryItem:
      type: object
      properties:
        id:
          type: integer
          format: int64
          description: Unique identifier
          example: 123
        inputText:
          type: string
          description: The original text that was analyzed
          example: "Hello World"
        analysisType:
          type: string
          description: Type of analysis performed
          enum: [vowels, consonants]
          example: "vowels"
        mode:
          type: string
          description: Analysis mode used
          enum: [online, offline]
          example: "online"
        characterCounts:
          type: object
          description: Map of characters to their occurrence counts
          additionalProperties:
            type: integer
          example:
            e: 1
            o: 2
        statistics:
          $ref: '#/components/schemas/AnalysisStatistics'
        createdAt:
          type: string
          format: date-time
          description: When the analysis was performed
          example: "2025-08-24T13:21:46+02:00"

    AnalysisStatistics:
      type: object
      properties:
        totalLetters:
          type: integer
          description: Total number of letters
          example: 10
        totalVowels:
          type: integer
          description: Total number of vowels
          example: 3
        totalConsonants:
          type: integer
          description: Total number of consonants
          example: 7
        totalDigits:
          type: integer
          description: Total number of digits
          example: 0
        totalSymbols:
          type: integer
          description: Total number of symbols
          example: 1
        wordCount:
          type: integer
          description: Number of words
          example: 2
        vowelPercentage:
          type: number
          format: double
          description: Percentage of vowels
          example: 30.0
        consonantPercentage:
          type: number
          format: double
          description: Percentage of consonants
          example: 70.0
        mostFrequentCharacter:
          type: string
          description: Most frequently occurring character
          example: "l"
        mostFrequentCount:
          type: integer
          description: Count of most frequent character
          example: 3

    ErrorResponse:
      type: object
      properties:
        error:
          type: string
          description: Error type
          example: "Validation failed"
        message:
          type: string
          description: Detailed error message
          example: "Text cannot be empty"
        timestamp:
          type: string
          format: date-time
          description: When the error occurred
          example: "2025-08-21T21:30:00Z"

  examples:
    VowelsRequest:
      summary: Analyze vowels in text
      value:
        type: "VOWELS"
        text: "The quick brown fox jumps over the lazy dog"
    
    ConsonantsRequest:
      summary: Analyze consonants in text
      value:
        type: "CONSONANTS"
        text: "The quick brown fox jumps over the lazy dog"

tags:
  - name: Text Analysis
    description: Operations for analyzing text content
  - name: Analysis History
    description: Operations for managing analysis history and persistence
